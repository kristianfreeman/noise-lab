name: Build Noise Lab Plugins

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install JUCE
      run: |
        # Download and install JUCE 8.0.7
        curl -L -o juce.zip https://github.com/juce-framework/JUCE/releases/download/8.0.7/juce-8.0.7-osx.zip
        unzip juce.zip
        sudo mv JUCE /Applications/
        ls -la /Applications/JUCE

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v1.14
      with:
        cmake-version: '3.22'

    - name: Configure build
      run: |
        mkdir build
        cd build
        cmake .. -DJUCE_PATH=/Applications/JUCE -DCMAKE_BUILD_TYPE=Release

    - name: Build VST3
      run: |
        cd build
        cmake --build . --config Release --target NoiseLab_VST3

    - name: Build AU
      run: |
        cd build
        cmake --build . --config Release --target NoiseLab_AU

    - name: Build Standalone
      run: |
        cd build
        cmake --build . --config Release --target NoiseLab_Standalone

    - name: Create artifact directory
      run: |
        mkdir -p artifacts/macos
        # Copy VST3
        if [ -d "build/NoiseLab_artefacts/VST3" ]; then
          cp -r "build/NoiseLab_artefacts/VST3/Noise Lab.vst3" "artifacts/macos/"
        fi
        # Copy AU  
        if [ -d "build/NoiseLab_artefacts/AU" ]; then
          cp -r "build/NoiseLab_artefacts/AU/Noise Lab.component" "artifacts/macos/"
        fi
        # Copy Standalone
        if [ -d "build/NoiseLab_artefacts/Standalone" ]; then
          cp -r "build/NoiseLab_artefacts/Standalone/Noise Lab.app" "artifacts/macos/"
        fi
        ls -la artifacts/macos/

    - name: Upload macOS Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: noise-lab-macos
        path: artifacts/macos/
        retention-days: 30

  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install JUCE
      run: |
        # Download and install JUCE 8.0.7 for Windows
        Invoke-WebRequest -Uri "https://github.com/juce-framework/JUCE/releases/download/8.0.7/juce-8.0.7-windows.zip" -OutFile "juce.zip"
        Expand-Archive -Path "juce.zip" -DestinationPath "C:\"
        if (Test-Path "C:\JUCE") { 
          Write-Host "JUCE installed successfully"
          Get-ChildItem "C:\JUCE" 
        } else { 
          Write-Host "JUCE installation failed" 
        }

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v1.14
      with:
        cmake-version: '3.22'

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3

    - name: Configure build
      run: |
        mkdir build
        cd build
        cmake .. -DJUCE_PATH=C:/JUCE -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -A x64

    - name: Build VST3
      run: |
        cd build
        cmake --build . --config Release --target NoiseLab_VST3

    - name: Build Standalone
      run: |
        cd build
        cmake --build . --config Release --target NoiseLab_Standalone

    - name: Create artifact directory
      run: |
        New-Item -ItemType Directory -Force -Path "artifacts/windows"
        # Copy VST3
        if (Test-Path "build/NoiseLab_artefacts/Release/VST3") {
          Copy-Item -Recurse "build/NoiseLab_artefacts/Release/VST3/Noise Lab.vst3" "artifacts/windows/"
        }
        # Copy Standalone
        if (Test-Path "build/NoiseLab_artefacts/Release/Standalone") {
          Copy-Item -Recurse "build/NoiseLab_artefacts/Release/Standalone/*" "artifacts/windows/"
        }
        Get-ChildItem "artifacts/windows/" -Recurse

    - name: Upload Windows Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: noise-lab-windows
        path: artifacts/windows/
        retention-days: 30

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libasound2-dev \
          libjack-jackd2-dev \
          ladspa-sdk \
          libcurl4-openssl-dev \
          libfreetype6-dev \
          libx11-dev \
          libxcomposite-dev \
          libxcursor-dev \
          libxext-dev \
          libxinerama-dev \
          libxrandr-dev \
          libxrender-dev \
          libwebkit2gtk-4.0-dev \
          libglu1-mesa-dev \
          mesa-common-dev

    - name: Install JUCE
      run: |
        # Download and install JUCE 8.0.7 for Linux
        curl -L -o juce.zip https://github.com/juce-framework/JUCE/releases/download/8.0.7/juce-8.0.7-linux.zip
        unzip juce.zip
        sudo mv JUCE /opt/
        ls -la /opt/JUCE

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v1.14
      with:
        cmake-version: '3.22'

    - name: Configure build
      run: |
        mkdir build
        cd build
        cmake .. -DJUCE_PATH=/opt/JUCE -DCMAKE_BUILD_TYPE=Release

    - name: Build VST3
      run: |
        cd build
        cmake --build . --config Release --target NoiseLab_VST3

    - name: Build Standalone
      run: |
        cd build
        cmake --build . --config Release --target NoiseLab_Standalone

    - name: Create artifact directory
      run: |
        mkdir -p artifacts/linux
        # Copy VST3
        if [ -d "build/NoiseLab_artefacts/VST3" ]; then
          cp -r "build/NoiseLab_artefacts/VST3/Noise Lab.vst3" "artifacts/linux/"
        fi
        # Copy Standalone
        if [ -d "build/NoiseLab_artefacts/Standalone" ]; then
          cp -r "build/NoiseLab_artefacts/Standalone/Noise Lab" "artifacts/linux/"
        fi
        ls -la artifacts/linux/

    - name: Upload Linux Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: noise-lab-linux  
        path: artifacts/linux/
        retention-days: 30

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-macos, build-windows, build-linux]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create release archives
      run: |
        # Create zip files for each platform
        zip -r noise-lab-macos.zip noise-lab-macos/
        zip -r noise-lab-windows.zip noise-lab-windows/
        zip -r noise-lab-linux.zip noise-lab-linux/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          noise-lab-macos.zip
          noise-lab-windows.zip
          noise-lab-linux.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}